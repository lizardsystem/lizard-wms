[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/latest.cfg
unzip = true
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    django
    omelette
    console_scripts
    pyflakes
    sphinx
    pylint
    codeintel
develop = .
auto-checkout =
    lizard-structure
eggs =
    lizard-wms
    factory_boy
    mock


[versions]
# Specific pins
lizard-wms =
djangorestframework = 2.1.6

# Required by:
# lizard-wms==1.9.dev0
GChartWrapper = 0.9


[sources]
lizard-structure = git git@github.com:lizardsystem/lizard-structure.git


[sysegg]
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    psycopg2
    PIL
    matplotlib
    pyproj


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_wms
projectegg = lizard_wms
settings = testsettings
test = lizard_wms
eggs =
    lizard-wms
    ${buildout:eggs}


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    ${buildout:eggs}
scripts = pylint
entry-points = pylint=pylint.lint:Run
arguments = ['--output-format=parseable', '--reports=n']+sys.argv[1:]


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${django:eggs}
